"""update payments

Revision ID: 28
Revises: 27
Create Date: 2025-08-14 23:21:55.490769

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from alembic_postgresql_enum import TableReference
from sqlalchemy.dialects import postgresql
from sqlalchemy import text

# revision identifiers, used by Alembic.
revision: str = "28"
down_revision: Union[str, None] = "27"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("MONOPAY", "LIQPAY", "PAYPASS", name="paymentgatewaytype").create(
        op.get_bind()
    )
    op.add_column("payments", sa.Column("transaction_id", sa.UUID(), nullable=True))
    op.add_column(
        "payments",
        sa.Column(
            "gateway_type",
            postgresql.ENUM(
                "MONOPAY",
                "LIQPAY",
                "PAYPASS",
                name="paymentgatewaytype",
                create_type=False,
            ),
            nullable=True,
        ),
    )
    op.create_foreign_key(
        "payments_transaction_id_fk",
        "payments",
        "transactions",
        ["transaction_id"],
        ["id"],
        ondelete="SET NULL",
    )

    # First, update the enum to include new values
    op.sync_enum_values(
        enum_schema="public",
        enum_name="paymenttype",
        new_values=[
            "BILL",
            "COIN",
            "PAYPASS",
            "MONOPAY",
            "LIQPAY",
            "FREE",
            "CASH",
            "CASHLESS",
        ],
        affected_columns=[
            TableReference(
                table_schema="public", table_name="payments", column_name="type"
            )
        ],
        enum_values_to_rename=[],
    )

    # Migrate existing payment data
    connection = op.get_bind()

    # Update LIQPAY payments: type -> CASHLESS, gateway_type -> LIQPAY
    connection.execute(
        text("""
            UPDATE payments 
            SET gateway_type = 'LIQPAY', type = 'CASHLESS' 
            WHERE type = 'LIQPAY'
        """)
    )

    # Update MONOPAY payments: type -> CASHLESS, gateway_type -> MONOPAY
    connection.execute(
        text("""
            UPDATE payments 
            SET gateway_type = 'MONOPAY', type = 'CASHLESS' 
            WHERE type = 'MONOPAY'
        """)
    )

    # Update BILL payments: type -> CASH
    connection.execute(
        text("""
            UPDATE payments 
            SET type = 'CASH' 
            WHERE type = 'BILL' OR type = 'COIN'
        """)
    )

    # Update PAYPASS payments: type -> CASHLESS, gateway_type -> PAYPASS
    connection.execute(
        text("""
            UPDATE payments 
            SET gateway_type = 'PAYPASS', type = 'CASHLESS' 
            WHERE type = 'PAYPASS'
        """)
    )

    # Finally, remove old enum values
    op.sync_enum_values(
        enum_schema="public",
        enum_name="paymenttype",
        new_values=["CASH", "CASHLESS", "FREE"],
        affected_columns=[
            TableReference(
                table_schema="public", table_name="payments", column_name="type"
            )
        ],
        enum_values_to_rename=[],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # First, add old enum values back to allow migration
    op.sync_enum_values(
        enum_schema="public",
        enum_name="paymenttype",
        new_values=[
            "CASH",
            "CASHLESS",
            "FREE",
            "BILL",
            "COIN",
            "PAYPASS",
            "MONOPAY",
            "LIQPAY",
        ],
        affected_columns=[
            TableReference(
                table_schema="public", table_name="payments", column_name="type"
            )
        ],
        enum_values_to_rename=[],
    )

    # Migrate data back to old format
    connection = op.get_bind()

    # Restore LIQPAY payments: CASHLESS + gateway_type=LIQPAY -> LIQPAY
    connection.execute(
        text("""
            UPDATE payments 
            SET type = 'LIQPAY' 
            WHERE type = 'CASHLESS' AND gateway_type = 'LIQPAY'
        """)
    )

    # Restore MONOPAY payments: CASHLESS + gateway_type=MONOPAY -> MONOPAY
    connection.execute(
        text("""
            UPDATE payments 
            SET type = 'MONOPAY' 
            WHERE type = 'CASHLESS' AND gateway_type = 'MONOPAY'
        """)
    )

    # Restore PAYPASS payments: CASHLESS + gateway_type=PAYPASS -> PAYPASS
    connection.execute(
        text("""
            UPDATE payments 
            SET type = 'PAYPASS' 
            WHERE type = 'CASHLESS' AND gateway_type = 'PAYPASS'
        """)
    )

    # Restore CASH payments -> BILL (we can't distinguish between BILL and COIN)
    connection.execute(
        text("""
            UPDATE payments 
            SET type = 'BILL' 
            WHERE type = 'CASH'
        """)
    )

    # Remove new enum values
    op.sync_enum_values(
        enum_schema="public",
        enum_name="paymenttype",
        new_values=["BILL", "COIN", "PAYPASS", "MONOPAY", "LIQPAY", "FREE"],
        affected_columns=[
            TableReference(
                table_schema="public", table_name="payments", column_name="type"
            )
        ],
        enum_values_to_rename=[],
    )

    op.drop_constraint("payments_transaction_id_fk", "payments", type_="foreignkey")
    op.drop_column("payments", "gateway_type")
    op.drop_column("payments", "transaction_id")
    sa.Enum("MONOPAY", "LIQPAY", "PAYPASS", name="paymentgatewaytype").drop(
        op.get_bind()
    )
    # ### end Alembic commands ###
