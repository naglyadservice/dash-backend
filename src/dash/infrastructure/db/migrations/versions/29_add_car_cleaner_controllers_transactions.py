"""add car_cleaner_controllers/transactions

Revision ID: 29
Revises: 28
Create Date: 2025-08-19 15:23:45.611748

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from alembic_postgresql_enum import TableReference
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "29"
down_revision: Union[str, None] = "28"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "car_cleaner_controllers",
        sa.Column("controller_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["controller_id"],
            ["controllers.id"],
        ),
        sa.PrimaryKeyConstraint("controller_id"),
    )
    op.create_table(
        "car_cleaner_transactions",
        sa.Column("transaction_id", sa.UUID(), nullable=False),
        sa.Column(
            "services_sold_seconds",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=False,
        ),
        sa.Column("tariff", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("replenishment_ratio", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["transaction_id"],
            ["transactions.id"],
        ),
        sa.PrimaryKeyConstraint("transaction_id"),
    )
    op.sync_enum_values(
        enum_schema="public",
        enum_name="controllertype",
        new_values=[
            "CARWASH",
            "WATER_VENDING",
            "VACUUM",
            "FISCALIZER",
            "LAUNDRY",
            "CAR_CLEANER",
        ],
        affected_columns=[
            TableReference(
                table_schema="public", table_name="controllers", column_name="type"
            )
        ],
        enum_values_to_rename=[],
    )
    op.sync_enum_values(
        enum_schema="public",
        enum_name="transactiontype",
        new_values=[
            "CARWASH",
            "WATER_VENDING",
            "VACUUM",
            "FISCALIZER",
            "LAUNDRY",
            "CAR_CLEANER",
        ],
        affected_columns=[
            TableReference(
                table_schema="public", table_name="transactions", column_name="type"
            )
        ],
        enum_values_to_rename=[],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.sync_enum_values(
        enum_schema="public",
        enum_name="transactiontype",
        new_values=["CARWASH", "WATER_VENDING", "VACUUM", "FISCALIZER", "LAUNDRY"],
        affected_columns=[
            TableReference(
                table_schema="public", table_name="transactions", column_name="type"
            )
        ],
        enum_values_to_rename=[],
    )
    op.sync_enum_values(
        enum_schema="public",
        enum_name="controllertype",
        new_values=["CARWASH", "WATER_VENDING", "VACUUM", "FISCALIZER", "LAUNDRY"],
        affected_columns=[
            TableReference(
                table_schema="public", table_name="controllers", column_name="type"
            )
        ],
        enum_values_to_rename=[],
    )
    op.drop_table("car_cleaner_transactions")
    op.drop_table("car_cleaner_controllers")
    # ### end Alembic commands ###
